name: Deploy docker images
on:
  workflow_call:
    inputs:
      matrix:
        required: true
        type: string
      target_tag_postfix:
        required: false
        default: ''
        type: string
      artifact_suffix:
        required: false
        default: ''
        type: string

jobs:
  deploy:
    name: Push image ${{ matrix.versions.ansible }}/${{ matrix.target }}
    runs-on: ubuntu-latest
    env:
      AWS_REGION: "us-east-1"
    strategy:
      fail-fast: false
      matrix:
        target:
          - base
          - aws
          - gcp
          - azure
        versions: ${{ fromJson(inputs.matrix) }}
    permissions:
      id-token: write
      packages: write
      contents: read
    steps:
      - name: Download ${{ matrix.target }}/amd64 artifact
        uses: actions/download-artifact@v4
        with:
          name: ansible-runner-${{ github.sha }}-${{ matrix.versions.ansible }}-${{ matrix.target }}-linux-amd64${{ inputs.target_tag_postfix }}${{ inputs.artifact_suffix }}
          path: '/tmp'

      - name: Download ${{ matrix.target }}/arm64 artifact
        uses: actions/download-artifact@v4
        with:
          name: ansible-runner-${{ github.sha }}-${{ matrix.versions.ansible }}-${{ matrix.target }}-linux-arm64${{ inputs.target_tag_postfix }}${{ inputs.artifact_suffix }}
          path: '/tmp'

      - name: Load image
        run: |
          docker load --input ${{ inputs.download_image_path }}/${{ matrix.versions.ansible }}-${{ matrix.target }}-linux-amd64.tar
          docker load --input ${{ inputs.download_image_path }}/${{ matrix.versions.ansible }}-${{ matrix.target }}-linux-arm64.tar

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 900

      - name: Login to Amazon ECR
        run: aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${REPOSITORY_PATH}
        env:
          REPOSITORY_PATH: ${{ secrets.PUBLIC_RUNNER_ANSIBLE_ECR_REPOSITORY_URL }}

      - name: Log in to Github Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Push images ${{ matrix.versions.ansible }}/${{ matrix.target }}
        working-directory: .github/scripts
        env:
          ECR_IMAGE: ${{ secrets.PUBLIC_RUNNER_ANSIBLE_ECR_REPOSITORY_URL }}
          TARGET_TAG: -${{ matrix.target }}${{ inputs.target_tag_postfix }}
        run: |
          if [[ "${TARGET_TAG}" == "-base" ]]; then
            TARGET_TAG=""${{ inputs.target_tag_postfix }}
          fi

          # Push ECR amd64 tag
          ./retag-and-push.sh ghcr.io/${{ github.repository }}:${{ matrix.versions.ansible }}-${{ matrix.target }}-linux-amd64-${{ github.sha }}\
            ${{ env.ECR_IMAGE }}:${{ matrix.versions.ansible }}${TARGET_TAG}-linux-amd64

          # Push ECR amd64 additional tags
          for tag in ${{ join(matrix.versions.additional_tags, ' ') }}
          do
            ./retag-and-push.sh ghcr.io/${{ github.repository }}:${{ matrix.versions.ansible }}-${{ matrix.target }}-linux-amd64-${{ github.sha }}\
                ${{ env.ECR_IMAGE }}:${tag}${TARGET_TAG}-linux-amd64
          done

          # Push ECR arm64 tags
          ./retag-and-push.sh ghcr.io/${{ github.repository }}:${{ matrix.versions.ansible }}-${{ matrix.target }}-linux-arm64-${{ github.sha }}\
            ${{ env.ECR_IMAGE }}:${{ matrix.versions.ansible }}${TARGET_TAG}-linux-arm64

          # Push ECR amd64 additional tags
          for tag in ${{ join(matrix.versions.additional_tags, ' ') }}
          do
            ./retag-and-push.sh ghcr.io/${{ github.repository }}:${{ matrix.versions.ansible }}-${{ matrix.target }}-linux-arm64-${{ github.sha }}\
                ${{ env.ECR_IMAGE }}:${tag}${TARGET_TAG}-linux-arm64
          done

          # Push ghcr amd64 tags
          ./retag-and-push.sh ghcr.io/${{ github.repository }}:${{ matrix.versions.ansible }}-${{ matrix.target }}-linux-amd64-${{ github.sha }}\
            ghcr.io/${{ github.repository }}:${{ matrix.versions.ansible }}${TARGET_TAG}-linux-amd64

          # Push ghcr amd64 additional tags
          for tag in ${{ join(matrix.versions.additional_tags, ' ') }}
          do
            ./retag-and-push.sh ghcr.io/${{ github.repository }}:${{ matrix.versions.ansible }}-${{ matrix.target }}-linux-amd64-${{ github.sha }}\
              ghcr.io/${{ github.repository }}:${tag}${TARGET_TAG}-linux-amd64
          done

          # Push ghcr arm64 tags
          ./retag-and-push.sh ghcr.io/${{ github.repository }}:${{ matrix.versions.ansible }}-${{ matrix.target }}-linux-arm64-${{ github.sha }}\
            ghcr.io/${{ github.repository }}:${{ matrix.versions.ansible }}${TARGET_TAG}-linux-arm64

          # Push ghcr arm64 additional tags
          for tag in ${{ join(matrix.versions.additional_tags, ' ') }}
          do
            ./retag-and-push.sh ghcr.io/${{ github.repository }}:${{ matrix.versions.ansible }}-${{ matrix.target }}-linux-arm64-${{ github.sha }}\
              ghcr.io/${{ github.repository }}:${tag}${TARGET_TAG}-linux-arm64
          done

          # Assemble multi arch ECR manifests
          echo "Create ECR manifest ${{ env.ECR_IMAGE }}:${{ matrix.versions.ansible }}${TARGET_TAG}"
          docker manifest create ${{ env.ECR_IMAGE }}:${{ matrix.versions.ansible }}${TARGET_TAG} \
            --amend ${{ env.ECR_IMAGE }}:${{ matrix.versions.ansible }}${TARGET_TAG}-linux-arm64 \
            --amend ${{ env.ECR_IMAGE }}:${{ matrix.versions.ansible }}${TARGET_TAG}-linux-amd64
          docker manifest push ${{ env.ECR_IMAGE }}:${{ matrix.versions.ansible }}${TARGET_TAG}

          # Assemble multi arch ECR manifests for additional tags
          for tag in ${{ join(matrix.versions.additional_tags, ' ') }}
          do
            echo "Create manifest ${{ env.ECR_IMAGE }}:${tag}${TARGET_TAG}"
            docker manifest create ${{ env.ECR_IMAGE }}:${tag}${TARGET_TAG} \
              --amend ${{ env.ECR_IMAGE }}:${tag}${TARGET_TAG}-linux-arm64 \
              --amend ${{ env.ECR_IMAGE }}:${tag}${TARGET_TAG}-linux-amd64
            docker manifest push ${{ env.ECR_IMAGE }}:${tag}${TARGET_TAG}
          done

          # Assemble multi arch ghcr manifests
          echo "Create manifest ghcr.io/${{ github.repository }}:${{ matrix.versions.ansible }}${TARGET_TAG}"
          docker manifest create ghcr.io/${{ github.repository }}:${{ matrix.versions.ansible }}${TARGET_TAG} \
            --amend ghcr.io/${{ github.repository }}:${{ matrix.versions.ansible }}${TARGET_TAG}-linux-arm64 \
            --amend ghcr.io/${{ github.repository }}:${{ matrix.versions.ansible }}${TARGET_TAG}-linux-amd64
          docker manifest push ghcr.io/${{ github.repository }}:${{ matrix.versions.ansible }}${TARGET_TAG}

          # Assemble multi arch ghcr manifests for additional tags
          for tag in ${{ join(matrix.versions.additional_tags, ' ') }}
          do
            echo "Create manifest ghcr.io/${{ github.repository }}:${tag}${TARGET_TAG}"
            docker manifest create ghcr.io/${{ github.repository }}:${tag}${TARGET_TAG} \
              --amend ghcr.io/${{ github.repository }}:${tag}${TARGET_TAG}-linux-arm64 \
              --amend ghcr.io/${{ github.repository }}:${tag}${TARGET_TAG}-linux-amd64
            docker manifest push ghcr.io/${{ github.repository }}:${tag}${TARGET_TAG}
          done
